MODULE main
VAR	
  user1_request : boolean;
  user2_request : boolean;
  user1_has_resource: boolean;
  user2_has_resource: boolean;
  
ASSIGN

  init(user1_has_resource) := FALSE;
  next(user1_has_resource) := case
            user1_request & (! user1_has_resource): TRUE;
  				  TRUE: FALSE;
            esac;

  init(user2_has_resource) := FALSE;
  next(user2_has_resource) := case
  				  user2_request & (! user2_has_resource): TRUE;
  				  TRUE: FALSE;
  			    esac;


-- 1) At any time, if User1 requests the resource, then User1 will get the resource later on
LTLSPEC
  G (user1_request -> (F(user1_has_resource)))
-- It is satisfied since in our model when user1 requests the resource, he gets in immediately in the next state.


-- 2) At any time, if User2 requests the resource, then User2 will get the resource later on
LTLSPEC 
  G (user2_request -> (F (user2_has_resource)))
-- Similarly to the case of user1, it is satisfied.


-- 3) User1 and User2 never get the resource at the same time
LTLSPEC 
  G ((! user1_has_resource) | (! user2_has_resource))
-- In this version of our model, this specification is not satisfied, since there is nothing preventing User1 and User2
-- to request the resource at the same time, meaning they will both get it in the next state, which is not logical.
-- In the second version, we will make sure that this specification will be satisfied


-- 4) Neither User1 nor User2 will ever keep the resource forever
LTLSPEC 
  G (user1_has_resource -> X (F (! user1_has_resource))) & G (user2_has_resource -> X (F (! user2_has_resource)))
-- This specification translates to if a user has the resource, he won't keep it in all the future states.
-- It is satisfied as expected, because in our model, a user gets the resource only for one state after request.


-- 5) If User1 requests the resource an infinite number of times, then it gets the resource an infinite number of times
LTLSPEC 
  G (F(user1_request -> (F(user1_has_resource))))
-- Let's suppose p is an atomic proposition, if we want to test if p is true an infinite number of times,
-- we test: G F p.
-- Similarly, we want the property 1 to happen an infinite number of times, which is translated in this property.
-- It is satisfied in this model.
  
